// <auto-generated />
using BulkyBookWeb.DataAccess.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BulkyBookWeb.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.1.23111.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BulkyBook.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "SciFi"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "History"
                        });
                });

            modelBuilder.Entity("BulkyBook.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Andrew Hunt",
                            CategoryId = 2,
                            Description = "A practical guide to programming.",
                            ISBN = "978-0135957059",
                            ImageUrl = "",
                            ListPrice = 550.0,
                            Price = 500.0,
                            Price100 = 450.0,
                            Price50 = 480.0,
                            Title = "The Pragmatic Programmer"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Robert C. Martin",
                            CategoryId = 2,
                            Description = "A Handbook of Agile Software Craftsmanship.",
                            ISBN = "978-0132350884",
                            ImageUrl = "",
                            ListPrice = 600.0,
                            Price = 580.0,
                            Price100 = 530.0,
                            Price50 = 550.0,
                            Title = "Clean Code"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Erich Gamma",
                            CategoryId = 2,
                            Description = "Elements of Reusable Object-Oriented Software.",
                            ISBN = "978-0201633610",
                            ImageUrl = "",
                            ListPrice = 700.0,
                            Price = 680.0,
                            Price100 = 630.0,
                            Price50 = 660.0,
                            Title = "Design Patterns"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Thomas H. Cormen",
                            CategoryId = 2,
                            Description = "Widely used textbook for algorithms.",
                            ISBN = "978-0262033848",
                            ImageUrl = "",
                            ListPrice = 900.0,
                            Price = 880.0,
                            Price100 = 820.0,
                            Price50 = 850.0,
                            Title = "Introduction to Algorithms"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Martin Fowler",
                            CategoryId = 2,
                            Description = "Improving the Design of Existing Code.",
                            ISBN = "978-0201485677",
                            ImageUrl = "",
                            ListPrice = 750.0,
                            Price = 720.0,
                            Price100 = 680.0,
                            Price50 = 700.0,
                            Title = "Refactoring"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Eric Evans",
                            CategoryId = 3,
                            Description = "Tackling Complexity in the Heart of Software.",
                            ISBN = "978-0321125217",
                            ImageUrl = "",
                            ListPrice = 850.0,
                            Price = 820.0,
                            Price100 = 780.0,
                            Price50 = 800.0,
                            Title = "Domain-Driven Design"
                        });
                });

            modelBuilder.Entity("BulkyBook.Models.Product", b =>
                {
                    b.HasOne("BulkyBook.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
